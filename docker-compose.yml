version: '3.3'

services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - 5433:5432
    restart: unless-stopped
    volumes:
      - ./scripts/dumps/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - ./scripts/dumps:/dumps
    env_file:
      - ./scripts/env/database.dev.env

  spring-api:
    build: ./spring-api/
    image: tutor-spring-api
    container_name: spring-api
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - 8080:8080
    restart: unless-stopped
    volumes:
      - ./scripts/images:/images
      - ./scripts/load:/load
      - ./scripts/export:/export
    env_file:
      - ./scripts/env/spring-api.dev.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tutordb
 
  frontend:
    build:
      context:  ./frontend/
      dockerfile: Dockerfile
      args:
        NODE_ENV: dev
    image: tutor-frontend                                                     
    container_name: frontend
    depends_on:
      - spring-api
    links:
      - spring-api
    ports:
      - 8081:80
      # - 443:443
    restart: unless-stopped
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/nginx.conf
      - ./scripts/error.log:/var/log/nginx/error.log
      - ./scripts/access.log:/var/log/nginx/access.log
      # - ./scripts/certbot/conf:/etc/letsencrypt
      # - ./scripts/certbot/www:/var/www/certbot
    env_file:
      - ./scripts/env/frontend.dev.env
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./scripts/certbot/conf:/etc/letsencrypt
  #     - ./scripts/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
